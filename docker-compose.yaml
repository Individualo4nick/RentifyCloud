version: "3.9"
services:
  eureka-server:
    build:
      context: eureka_server
      dockerfile: Dockerfile
    networks:
      - my-network
    ports:
      - "8761:8761"
  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    networks:
      - my-network
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - EUREKA_INSTANSE_PREFERIPADDRESS=true
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082"]
      interval: 30s
      timeout: 10s
      retries: 3
  access-control-service:
    build:
      context: authorization
      dockerfile: Dockerfile
    networks:
      - my-network
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - EUREKA_INSTANSE_PREFERIPADDRESS=true
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - my-network
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network

volumes:
  keycloak_data:
  postgres_data:

networks:
  my-network:
    driver: bridge
